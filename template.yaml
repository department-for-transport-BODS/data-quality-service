AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Stub for DQS

Parameters:
  Environment:
    Type: String
    Description: The environment to deploy to
    Default: local
  ParamEnvironment:
    Type: String
    Description: The environment to pull params for
    Default: local
  Repository:
    Type: String
    Description: The Github Repository Name
    Default: local
  VPC:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>
    Description: The VPC to deploy to
    Default: ''
  PrivateSubnets:
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>
    Description: The public subnets to deploy to
    Default: ''

Conditions:
  IsLocal:
    !Equals
      - !Ref ParamEnvironment
      - local

Resources:
  BoilerPlate:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${Repository}-boilerplate-layer-${Environment}"
      ContentUri: src/boilerplate
      CompatibleRuntimes:
        - python3.11
    Metadata:
      BuildMethod: python3.11

  TemplateQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Repository}-template-queue-${Environment}"

  TemplateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-template-function-${Environment}"
      CodeUri: src/template
      Handler: app.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Layers:
        !If 
          - IsLocal
          - []
          - - !Ref BoilerPlate
      Role: !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/dqs-lambda-role-arn}}'
      VpcConfig:
        SubnetIds: !Ref PrivateSubnets
        SecurityGroupIds:
          - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}'
      Policies:
        - SQSPollerPolicy:
            QueueName:
              !GetAtt TemplateQueue.QueueName
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TemplateQueue.Arn
      Environment:
        Variables:
          POSTGRES_DB: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}'
          POSTGRES_HOST: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}'
          POSTGRES_PASSWORD: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}'
          POSTGRES_PORT: 
            !If
              - IsLocal
              - 3128
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}'
          POSTGRES_USER:
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}'



Outputs:
  Env:
    Description: "Environment"
    Value: !Ref Environment