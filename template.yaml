AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  This SAM template deploys resources associated with the DQS (Data Quality Service) for BODS

Parameters:
  DomainName:
    Type: String
    Description: The domain with which the service is associated, for use with SES
    Default: 'bus-data.dft.gov.uk'
  Environment:
    Type: String
    Description: The environment into which the stack is being deployed
  ProjectName:
    Description: The name of the project
    Type: String
  RdsDbHostAddr:
    Type: String
    Default: ''
  RdsDbPort:
    Type: Number
    Default: 5432

Conditions:
  IsNotLocal: !Not [!Equals [!Ref Environment, 'local']]

Globals:
  Function:
    Architectures:
      - x86_64
    Runtime: python3.11
    Timeout: 135 # 120s Run time and added 15 seconds for the timeout handler
    MemorySize: 512
    Tracing: Active
    KmsKeyArn: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
    VpcConfig: !If
      - IsNotLocal
      -
        SubnetIds:
          - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-0}}'
          - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-1}}'
          - !Sub '{{resolve:ssm:/bodds/${Environment}/private-subnet-2}}'
        SecurityGroupIds:
          - !GetAtt DqsCommonLambdaSecurityGroup.GroupId
      - !Ref 'AWS::NoValue'
    Environment:
      Variables:
        PROJECT_ENV: !Ref Environment
        PROJECT_NAME: !Ref ProjectName
        POSTGRES_HOST: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-endpoint}}'
            - !Ref RdsDbHostAddr
        POSTGRES_PORT: !Ref RdsDbPort
        POSTGRES_DB: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-db-name}}'
            - postgres
        POSTGRES_USER: !If
            - IsNotLocal
            - !Sub '{{resolve:ssm:/bodds/${Environment}/pg-rw-user}}'
            - postgres
        CACHE_BUCKET: !Ref DQSCacheBucket
        CACHE_BACKEND: None

Resources:
  #########################################
  #### GENERAL CONFIGURATION RESOURCES ####
  #########################################
  DqsCommonLambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: IsNotLocal
    Properties:
      GroupDescription: !Sub 'Security group for ${ProjectName}-${Environment} DQS related lambda functions'
      GroupName: !Sub '${ProjectName}-${Environment}-dqs-common-lambda'
      SecurityGroupEgress: 
        - IpProtocol: '-1'
          Description: 'Allow outbound connectivity to any'
          CidrIp: '0.0.0.0/0'
      VpcId: !Sub '{{resolve:ssm:/bodds/${Environment}/vpc-id}}'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-${Environment}-dqs-common-lambda'

  DqsCommonLambdaSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: IsNotLocal
    Properties:
      GroupId: !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-sg-id}}'
      Description: !Sub 'Allow inbound connectivity from ${ProjectName}-${Environment}-dqs-common-lambda'
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !GetAtt DqsCommonLambdaSecurityGroup.GroupId

  BoilerplateLambdaLayer: 
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub '${ProjectName}-${Environment}-boilerplate-layer'
      ContentUri: ./src/boilerplate
      CompatibleRuntimes:
        - python3.11
    Metadata:
      BuildMethod: python3.11

  ###############################
  #### DQS DEAD LETTER QUEUE ####
  ###############################
  DQSDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-dead-letter-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300

  #####################################
  #### FIRST STOP IS SET DOWN ONLY ####
  #####################################
  FirstStopIsSetDownOnlyQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-first-stop-is-set-down-only-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  FirstStopIsSetDownOnlyLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-first-stop-is-set-down-only-lambda'
      CodeUri: ./src/template
      Handler: first_stop_is_set_down_only.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt FirstStopIsSetDownOnlyQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt FirstStopIsSetDownOnlyQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref FirstStopIsSetDownOnlyLambdaLogGroup

  FirstStopIsSetDownOnlyLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-first-stop-is-set-down-only-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ###################################
  #### LAST STOP IS PICK UP ONLY ####
  ###################################
  LastStopIsPickUpOnlyQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-last-stop-is-pickup-only-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  LastStopIsPickUpOnlyLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-last-stop-is-pickup-only-lambda'
      CodeUri: ./src/template
      Handler: last_stop_is_pick_up_only.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt LastStopIsPickUpOnlyQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt LastStopIsPickUpOnlyQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref LastStopIsPickUpOnlyLambdaLogGroup

  LastStopIsPickUpOnlyLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-last-stop-is-pickup-only-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ##########################################
  #### FIRST STOP IS NOT A TIMING POINT ####
  ##########################################
  FirstStopIsNotATimingPointQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-first-stop-is-not-a-timing-point-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  FirstStopIsNotATimingPointLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-first-stop-is-not-a-timing-point-lambda'
      CodeUri: ./src/template
      Handler: first_stop_is_not_a_timing_point.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt FirstStopIsNotATimingPointQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt FirstStopIsNotATimingPointQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref FirstStopIsNotATimingPointLambdaLogGroup

  FirstStopIsNotATimingPointLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-first-stop-is-not-a-timing-point-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  #########################################
  #### LAST STOP IS NOT A TIMING POINT ####
  #########################################
  LastStopIsNotATimingPointQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-last-stop-is-not-a-timing-point-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  LastStopIsNotATimingPointLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-last-stop-is-not-a-timing-point-lambda'
      CodeUri: ./src/template
      Handler: last_stop_is_not_a_timing_point.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt LastStopIsNotATimingPointQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt LastStopIsNotATimingPointQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref LastStopIsNotATimingPointLambdaLogGroup

  LastStopIsNotATimingPointLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-last-stop-is-not-a-timing-point-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  #######################
  #### INCORRECT NOC ####
  #######################
  IncorrectNocQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-incorrect-noc-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  IncorrectNocLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-incorrect-noc-lambda'
      CodeUri: ./src/template
      Handler: incorrect_noc.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt IncorrectNocQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt IncorrectNocQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref IncorrectNocLambdaLogGroup

  IncorrectNocLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-incorrect-noc-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  #############################
  #### INCORRECT STOP TYPE ####
  #############################
  IncorrectStopTypeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-incorrect-stop-type-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  IncorrectStopTypeLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-incorrect-stop-type-lambda'
      CodeUri: ./src/template
      Handler: incorrect_stop_type.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt IncorrectStopTypeQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt IncorrectStopTypeQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref IncorrectStopTypeLambdaLogGroup

  IncorrectStopTypeLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-incorrect-stop-type-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ##################################
  #### INCORRECT LICENCE NUMBER ####
  ##################################
  IncorrectLicenceNumberQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-incorrect-licence-number-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  IncorrectLicenceNumberLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-incorrect-licence-number-lambda'
      CodeUri: ./src/template
      Handler: incorrect_licence_number.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt IncorrectLicenceNumberQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt IncorrectLicenceNumberQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref IncorrectLicenceNumberLambdaLogGroup

  IncorrectLicenceNumberLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-incorrect-licence-number-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30


  ######################
  #### MISSING STOP ####
  ######################
  MissingStopQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-missing-stop-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  MissingStopLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-missing-stop-lambda'
      CodeUri: ./src/template
      Handler: app.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt MissingStopQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MissingStopQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref MissingStopLambdaLogGroup

  MissingStopLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-missing-stop-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ####################################
  #### MISSING BUS WORKING NUMBER ####
  ####################################
  MissingBusWorkingNumberQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-missing-bus-working-number-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  MissingBusWorkingNumberLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-missing-bus-working-number'
      CodeUri: ./src/template
      Handler: missing_bus_working_number.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt MissingBusWorkingNumberQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MissingBusWorkingNumberQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref MissingBusWorkingNumberLambdaLogGroup

  MissingBusWorkingNumberLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-missing-bus-working-number-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ################################
  #### DUPLICATE JOURNEY CODE ####
  ################################
  DuplicateJourneyCodeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-duplicate-journey-code-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3
      
  DuplicateJourneyCodeLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-duplicate-journey-code-lambda'
      CodeUri: ./src/template
      Handler: duplicate_journey_code.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt DuplicateJourneyCodeQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DuplicateJourneyCodeQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref DuplicateJourneyCodeLambdaLogGroup

  DuplicateJourneyCodeLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-duplicate-journey-code-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ##################################
  #### STOP NOT FOUND IN NAPTAN ####
  ##################################      
  StopNotFoundInNaptanQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-stop-not-found-in-naptan-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  StopNotFoundInNaptanLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-stop-not-found-in-naptan-lambda'
      CodeUri: ./src/template
      Handler: stop_not_found_in_naptan.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt StopNotFoundInNaptanQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt StopNotFoundInNaptanQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref StopNotFoundInNaptanLambdaLogGroup

  StopNotFoundInNaptanLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-stop-not-found-in-naptan-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ########################################
  #### SAME STOP FOUND MULTIPLE TIMES ####
  ########################################
  SameStopFoundMultipleTimesQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-same-stop-found-multiple-times-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  SameStopFoundMultipleTimesLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-same-stop-found-multiple-times-lambda'
      CodeUri: ./src/template
      Handler: app.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt SameStopFoundMultipleTimesQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SameStopFoundMultipleTimesQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref SameStopFoundMultipleTimesLambdaLogGroup

  SameStopFoundMultipleTimesLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-same-stop-found-multiple-times-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ###########################################
  #### NO TIMING POINT MORE THAN 15 MINS ####
  ###########################################
  NoTimingPointMoreThan15MinsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-no-timing-point-more-than-15-mins-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3
      
  NoTimingPointMoreThan15MinsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-no-timing-point-more-than-15-mins-lambda'
      CodeUri: ./src/template
      Handler: no_timing_point_for_more_than_15_minutes.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt NoTimingPointMoreThan15MinsQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt NoTimingPointMoreThan15MinsQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref NoTimingPointMoreThan15MinsLogGroup

  NoTimingPointMoreThan15MinsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-no-timing-point-more-than-15-mins-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30


  ################################
  #### MISSING JOURNEY CODE ####
  ################################
  MissingJourneyCodeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-missing-journey-code-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3
      
  MissingJourneyCodeLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-missing-journey-code-lambda'
      CodeUri: ./src/template
      Handler: missing_journey_code.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt MissingJourneyCodeQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MissingJourneyCodeQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref MissingJourneyCodeLambdaLogGroup

  MissingJourneyCodeLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-missing-journey-code-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30


  #######################################
  ### GENERATE DQS REPORT CSV LAMDA #####
  #######################################
  GenerateDQSCSVReportQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-generate-csv-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300

  GenerateDQSCSVReportQueueLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-generate-dqs-csv-report-lambda'
      CodeUri: ./src/observation_report
      Handler: app.lambda_handler
      Environment:
        Variables:
          S3_BUCKET_DQS_CSV_REPORT: !Sub 'bodds-${Environment}-dqs-reports'
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer]
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt GenerateDQSCSVReportQueue.QueueName
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub 'arn:aws:s3:::bodds-${Environment}-dqs-reports/*'
            - Effect: Allow
              Action:
                - kms:Decrypt
                - kms:Encrypt
                - kms:GenerateDataKey
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt GenerateDQSCSVReportQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref GenerateDQSCSVReportLambdaLogGroup

  GenerateDQSCSVReportLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-generate-dqs-csv-report-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ###########################################################
  #### CANCELLED SERVICE INCORRECTLY APPEARING AS ACTIVE ####
  ###########################################################
  CancelledServiceAppearingActiveQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-cancelled-service-appearing-active-queue'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3
      
  CancelledServiceAppearingActiveLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-cancelled-service-appearing-active-lambda'
      CodeUri: ./src/template
      Handler: cancelled_service_incorrectly_appearing_as_active.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt CancelledServiceAppearingActiveQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt CancelledServiceAppearingActiveQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref CancelledServiceAppearingActiveLambdaLogGroup

  CancelledServiceAppearingActiveLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-cancelled-service-appearing-active-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ###########################################
  ####       DATA PREFETCH LAMBDA        ####
  ###########################################
  DataPreFetchLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-data-prefetch-lambda'
      CodeUri: ./src/template
      Handler: data_prefetch.lambda_handler
      Layers: !If
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - S3WritePolicy:
            BucketName: !Ref DQSCacheBucket
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      LoggingConfig:
        LogGroup: !Ref DataPreFetchLambdaLogGroup

  DataPreFetchLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-data-prefetch-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ###########################################
  ####            INITIATE DQS           ####
  ###########################################
  InitiateDQSLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-initiate-dqs-lambda'
      CodeUri: ./src/template
      Handler: initiate_dqs.lambda_handler
      Layers: !If
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - S3WritePolicy:
            BucketName: !Ref DQSCacheBucket
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${ProjectName}-${Environment}-sm'
                  - "*"
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      LoggingConfig:
        LogGroup: !Ref InitiateDQSLambdaLogGroup

  InitiateDQSLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-initiate-dqs-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  ###########################################
  ####           General Error Lambda    ####
  ###########################################
  GeneralErrorLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-general-error-lambda'
      CodeUri: ./src/template
      Handler: general_error_handler.lambda_handler
      Layers: !If
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - S3WritePolicy:
            BucketName: !Ref DQSCacheBucket
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      LoggingConfig:
        LogGroup: !Ref GeneralErrorLambdaLogGroup

  GeneralErrorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-general-error-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30
        

  ###########################################
  #### SERVICED ORGANISATION OUT OF DATE ####
  ###########################################
  ServicedOrganisationOutOfDateQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${ProjectName}-${Environment}-serviced-organisation-out-of-date'
      KmsMasterKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      VisibilityTimeout: 300
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DQSDeadLetterQueue.Arn
        maxReceiveCount: 3

  ServicedOrganisationOutOfDateLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-serviced-organisation-out-of-date-lambda'
      CodeUri: ./src/template
      Handler: serviced_organisation_data_is_out_of_date.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SQSPollerPolicy:
            QueueName: !GetAtt ServicedOrganisationOutOfDateQueue.QueueName
        - S3ReadPolicy:
            BucketName: !Ref DQSCacheBucket
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt ServicedOrganisationOutOfDateQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref ServicedOrganisationOutOfDateLambdaLogGroup

  ServicedOrganisationOutOfDateLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-serviced-organisation-out-of-date-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  #################################
  #### PIPELINE MONITOR LAMBDA ####
  #################################
  PipelineMonitorLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-pipeline-monitor-lambda'
      CodeUri: ./src/template
      Handler: monitor.lambda_handler
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer]
        - !Ref 'AWS::NoValue'
      Environment:
        Variables:
          SQS_QUEUE_ENDPOINT: !Sub 'https://sqs.${AWS::Region}.amazonaws.com/'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - 'sqs:GetQueueUrl'
              - 'sqs:SendMessage'
            Resource: !GetAtt GenerateDQSCSVReportQueue.Arn
          - Effect: Allow
            Action:
              - 'sqs:ListQueues'
            Resource: '*'
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Encrypt
                - kms:GenerateDataKey
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      LoggingConfig:
        LogGroup: !Ref PipelineMonitorLambdaLogGroup

  PipelineMonitorLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-pipeline-monitor-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30


  #####################################
  ####   DEAD LETTER QUEUE LAMBDA  ####
  #####################################
  DeadLetterQueueLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-${Environment}-dead-letter-queue-lambda'
      CodeUri: ./src/dead_letter_queue_lambda
      Handler: app.lambda_handler
      Environment:  
        Variables:
          SOURCE_EMAIL: !Sub '${ProjectName}-monitoring.${Environment}@${DomainName}'
          RECIPIENT_EMAIL: 'UK-DLInfrastructureIGH@KPMG.co.uk'
          SQS_QUEUE_URL: !GetAtt DQSDeadLetterQueue.QueueUrl
      Layers: !If 
        - IsNotLocal
        - [!Ref BoilerplateLambdaLayer, !Sub 'arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:14']
        - !Ref 'AWS::NoValue'
      Policies:
        - 'AWSLambdaBasicExecutionRole'
        - 'AWSLambdaVPCAccessExecutionRole'
        - 'AWSXrayWriteOnlyAccess'
        - 'AWSLambda_ReadOnlyAccess'
        - 'CloudWatchLambdaInsightsExecutionRolePolicy'
        - SESCrudPolicy:
            IdentityName: !Ref DomainName
        - SQSPollerPolicy:
            QueueName: !GetAtt DQSDeadLetterQueue.QueueName
        - !If
          - IsNotLocal
          - Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
                - kms:Decrypt
              Resource: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
          - !Ref 'AWS::NoValue'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-ro-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
        - !If
          - IsNotLocal
          - !Sub '{{resolve:ssm:/bodds/${Environment}/rds-proxy-rw-user-access-policy-arn}}'
          - 'AmazonRDSReadOnlyAccess'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DQSDeadLetterQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      LoggingConfig:
        LogGroup: !Ref DeadLetterQueueLambdaLogGroup

  DeadLetterQueueLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-${Environment}-dead-letter-queue-lambda'
      KmsKeyId: !Sub '{{resolve:ssm:/bodds/${Environment}/kms-key-arn}}'
      RetentionInDays: 30

  DQSStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: ./state-machine.json
      DefinitionSubstitutions:
        FirstStopIsSetDownOnlyLambdaArn: !GetAtt FirstStopIsSetDownOnlyLambda.Arn
        LastStopIsPickUpOnlyLambdaArn: !GetAtt LastStopIsPickUpOnlyLambda.Arn
        FirstStopIsNotATimingPointLambdaArn: !GetAtt FirstStopIsNotATimingPointLambda.Arn
        LastStopIsNotATimingPointLambdaArn: !GetAtt LastStopIsNotATimingPointLambda.Arn
        IncorrectNocLambdaArn: !GetAtt IncorrectNocLambda.Arn
        IncorrectStopTypeLambdaArn: !GetAtt IncorrectStopTypeLambda.Arn
        IncorrectLicenceNumberLambdaArn: !GetAtt IncorrectLicenceNumberLambda.Arn
        MissingStopLambdaArn: !GetAtt MissingStopLambda.Arn
        MissingBusWorkingNumberLambdaArn: !GetAtt MissingBusWorkingNumberLambda.Arn
        DuplicateJourneyCodeLambdaArn: !GetAtt DuplicateJourneyCodeLambda.Arn
        StopNotFoundInNaptanLambdaArn: !GetAtt StopNotFoundInNaptanLambda.Arn
        SameStopFoundMultipleTimesLambdaArn: !GetAtt SameStopFoundMultipleTimesLambda.Arn
        NoTimingPointMoreThan15MinsLambdaArn: !GetAtt NoTimingPointMoreThan15MinsLambda.Arn
        MissingJourneyCodeLambdaArn: !GetAtt MissingJourneyCodeLambda.Arn
        CancelledServiceAppearingActiveLambdaArn: !GetAtt CancelledServiceAppearingActiveLambda.Arn
        ServicedOrganisationOutOfDateLambdaArn: !GetAtt ServicedOrganisationOutOfDateLambda.Arn
        DataPreFetchLambdaArn: !GetAtt DataPreFetchLambda.Arn
        InitiateDQSLambdaArn: !GetAtt InitiateDQSLambda.Arn
        GeneralErrorLambdaArn: !GetAtt GeneralErrorLambda.Arn
        PipelineMonitorLambdaArn: !GetAtt PipelineMonitorLambda.Arn
        
      Name: !Sub '${ProjectName}-${Environment}-sm'
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref FirstStopIsSetDownOnlyLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref LastStopIsPickUpOnlyLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref FirstStopIsNotATimingPointLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref LastStopIsNotATimingPointLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref IncorrectNocLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref IncorrectStopTypeLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref IncorrectLicenceNumberLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref MissingStopLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref MissingBusWorkingNumberLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref DuplicateJourneyCodeLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref StopNotFoundInNaptanLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref SameStopFoundMultipleTimesLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref NoTimingPointMoreThan15MinsLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref MissingJourneyCodeLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref CancelledServiceAppearingActiveLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref ServicedOrganisationOutOfDateLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref DataPreFetchLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref InitiateDQSLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref GeneralErrorLambda
        - LambdaInvokePolicy:
            FunctionName: !Ref PipelineMonitorLambda

  DQSCacheBucket:
    Type:  AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-${Environment}-cache'
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        LogFilePrefix: 'access_logs'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: 'AES256'
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: Delete in 7 days after expiry
            Status: Enabled
            ExpirationInDays: 7
            NoncurrentVersionExpiration:
              NoncurrentDays: 7
