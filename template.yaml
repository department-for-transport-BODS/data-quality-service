AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Stub for DQS

Parameters:
  Environment:
    Type: String
    Description: The environment to deploy to
    Default: local
  ParamEnvironment:
    Type: String
    Description: The environment to pull params for
    Default: local
  Repository:
    Type: String
    Description: The Github Repository Name
    Default: local
  # Commented for future use as VPC will be used in AWS deployment
  # Vpc:
  #   Type: String
  #   Description: The Vpc to deploy to
  #   Default: ''
  PrivateSubnets:
    Type: String
    Description: The public subnets to deploy to
    Default: ''
  VisibilityTimeout:
    Type: Number
    Description: Timeout for the lambda
    Default: 90

Conditions:  
  IsLocal: !Equals [!Ref ParamEnvironment, 'local']  

Resources:

  # Import the AWS Lambda function from my-long-function-name.yaml    

  BoilerPlate: 
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${Repository}-boilerplate-layer-${Environment}"
      ContentUri: src/boilerplate
      CompatibleRuntimes:
        - python3.11
    Metadata:
      BuildMethod: python3.11
  
  IncorrectNocQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-incorrect_noc_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  FirstStopIsSetDownOnlyQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-first_stop_is_set_down_only_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  LastStopIsPickUpOnlyQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-last_stop_is_pickup_only_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  FirstStopIsNotATimingPointQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-first_stop_is_not_a_timing_point_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  LastStopIsNotATimingPointQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-last_stop_is_not_a_timing_point_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  IncorrectStopTypeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-incorrect_stop_type_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  MissingJourneyCodeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-missing_journey_code_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  DuplicateJourneyCodeQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-duplicate_journey_code_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  MissingBusWorkingNumberQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-missing_bus_working_number_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  MissingStopQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-missing_stop_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  StopNotFoundQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-stop_not_found_in_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  SameStopFoundMultipleTimesQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-same_stop_found_multiple_times_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  IncorrectLicenseNumberQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-incorrect_licence_number_queue"
      VisibilityTimeout: !Ref VisibilityTimeout

  DQSLambdaRole:
    Type: AWS::IAM::Role  
    Properties:  
      RoleName: dqs-lambda-role  
      AssumeRolePolicyDocument:  
        Version: "2012-10-17"  
        Statement:  
          - Effect: Allow  
            Principal:  
              Service: lambda.amazonaws.com  
            Action: sts:AssumeRole  
      Policies:  
        - PolicyName: dqs-lambda-policy  
          PolicyDocument:  
            Version: "2012-10-17"  
            Statement:  
              - Effect: Allow  
                Action:  
                  - logs:CreateLogGroup  
                  - logs:CreateLogStream  
                  - logs:PutLogEvents  
                Resource: arn:aws:logs:*:*:*   

  FirstStopIsSetDownOnlyLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-first_stop_is_pick_up_only_lambda-${Environment}"
      CodeUri: src/template
      Handler: first_stop_is_set_down_only.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Role: !GetAtt DQSLambdaRole.Arn
      Layers: !If 
        - IsLocal
        - !Ref 'AWS::NoValue'
        - 
          - !Ref BoilerPlate
      VpcConfig:
        SubnetIds: !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Ref PrivateSubnets
        SecurityGroupIds: !If 
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}'
      Policies:
        - SQSPollerPolicy:
            QueueName:
              !GetAtt FirstStopIsSetDownOnlyQueue.QueueName
        - !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/secrets-manager-policy-arn}}'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt FirstStopIsSetDownOnlyQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      Environment:
        Variables:
          POSTGRES_DB: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}'
          POSTGRES_HOST: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}'
          POSTGRES_PASSWORD_ARN: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}'
          POSTGRES_PORT: 
            !If
              - IsLocal
              - 3128
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}'
          POSTGRES_USER:
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}'

  LastStopIsPickUpOnlyLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-last_stop_is_set_down_only_lambda-${Environment}"
      CodeUri: src/template
      Handler: last_stop_is_pick_up_only.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Role: !GetAtt DQSLambdaRole.Arn
      Layers: !If 
        - IsLocal
        - !Ref 'AWS::NoValue'
        - 
          - !Ref BoilerPlate
      VpcConfig:
        SubnetIds: !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Ref PrivateSubnets
        SecurityGroupIds: !If 
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}'
      Policies:
        - SQSPollerPolicy:
            QueueName:
              !GetAtt LastStopIsPickUpOnlyQueue.QueueName
        - !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/secrets-manager-policy-arn}}'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt LastStopIsPickUpOnlyQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      Environment:
        Variables:
          POSTGRES_DB: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}'
          POSTGRES_HOST: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}'
          POSTGRES_PASSWORD_ARN: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}'
          POSTGRES_PORT: 
            !If
              - IsLocal
              - 3128
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}'
          POSTGRES_USER:
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}'

  IncorrectNocQueueLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-incorrect_noc-${Environment}"
      CodeUri: src/template
      Handler: incorrect_noc.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Role: !GetAtt DQSLambdaRole.Arn
      Layers: !If 
        - IsLocal
        - !Ref 'AWS::NoValue'
        - 
          - !Ref BoilerPlate
      VpcConfig:
        SubnetIds: !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Ref PrivateSubnets
        SecurityGroupIds: !If 
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}'
      Policies:
        - SQSPollerPolicy:
            QueueName:
              !GetAtt IncorrectNocQueue.QueueName
        - !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/secrets-manager-policy-arn}}'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt IncorrectNocQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      Environment:
        Variables:
          POSTGRES_DB: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}'
          POSTGRES_HOST: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}'
          POSTGRES_PASSWORD_ARN: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}'
          POSTGRES_PORT: 
            !If
              - IsLocal
              - 3128
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}'
          POSTGRES_USER:
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}'

  FirstStopIsNotATimingPointQueueLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-first_stop_is_not_a_timing_point-${Environment}"
      CodeUri: src/template
      Handler: first_stop_is_not_a_timing_point.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Role: !GetAtt DQSLambdaRole.Arn
      Layers: !If 
        - IsLocal
        - !Ref 'AWS::NoValue'
        - 
          - !Ref BoilerPlate
      VpcConfig:
        SubnetIds: !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Ref PrivateSubnets
        SecurityGroupIds: !If 
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}'
      Policies:
        - SQSPollerPolicy:
            QueueName:
              !GetAtt FirstStopIsNotATimingPointQueue.QueueName
        - !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/secrets-manager-policy-arn}}'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt FirstStopIsNotATimingPointQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      Environment:
        Variables:
          POSTGRES_DB: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}'
          POSTGRES_HOST: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}'
          POSTGRES_PASSWORD_ARN: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}'
          POSTGRES_PORT: 
            !If
              - IsLocal
              - 3128
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}'
          POSTGRES_USER:
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}'

  LastStopIsNotATimingPointQueueLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-last_stop_is_not_a_timing_point-${Environment}"
      CodeUri: src/template
      Handler: last_stop_is_not_a_timing_point.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Role: !GetAtt DQSLambdaRole.Arn
      Layers: !If 
        - IsLocal
        - !Ref 'AWS::NoValue'
        - 
          - !Ref BoilerPlate
      VpcConfig:
        SubnetIds: !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Ref PrivateSubnets
        SecurityGroupIds: !If 
          - IsLocal
          - !Ref 'AWS::NoValue'
          - 
            - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}'
      Policies:
        - SQSPollerPolicy:
            QueueName:
              !GetAtt LastStopIsNotATimingPointQueue.QueueName
        - !If
          - IsLocal
          - !Ref 'AWS::NoValue'
          - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/secrets-manager-policy-arn}}'
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt LastStopIsNotATimingPointQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      Environment:
        Variables:
          POSTGRES_DB: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}'
          POSTGRES_HOST: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}'
          POSTGRES_PASSWORD_ARN: 
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}'
          POSTGRES_PORT: 
            !If
              - IsLocal
              - 3128
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}'
          POSTGRES_USER:
            !If
              - IsLocal
              - postgres
              - !Sub '{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}'



Outputs:
  Env:
    Description: "Environment"
    Value: !Ref Environment