AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Stub for DQS

Parameters:
  Environment:
    Type: String
    Description: The environment to deploy to
    Default: local
  ParamEnvironment:
    Type: String
    Description: The environment to pull params for
    Default: local
  Repository:
    Type: String
    Description: The Github Repository Name
    Default: local
  Vpc:
    Type: String
    Description: The Vpc to deploy to
    Default: ""
  PrivateSubnets:
    Type: String
    Description: The public subnets to deploy to
    Default: ""

Conditions:
  IsLocal: [!Equals [!Ref ParamEnvironment, "local"]]

Resources:
  BoilerPlate:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${Repository}-boilerplate-layer-${Environment}"
      ContentUri: src/boilerplate
      CompatibleRuntimes:
        - python3.11
    Metadata:
      BuildMethod: python3.11

  incorrect_noc_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-incorrect_noc_queue"
      VisibilityTimeout: 90

  first_stop_is_set_down_only_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-first_stop_is_set_down_only_queue"
      VisibilityTimeout: 90

  last_stop_is_pickup_only_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-last_stop_is_pickup_only_queue"
      VisibilityTimeout: 90

  first_step_is_not_a_timing_point_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-first_step_is_not_a_timing_point_queue"
      VisibilityTimeout: 90

  last_stop_is_not_a_timing_point_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-last_stop_is_not_a_timing_point_queue"
      VisibilityTimeout: 90

  incorrect_stop_type_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-incorrect_stop_type_queue"
      VisibilityTimeout: 90

  missing_journey_code_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-missing_journey_code_queue"
      VisibilityTimeout: 90

  duplicate_journey_code_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-duplicate_journey_code_queue"
      VisibilityTimeout: 90

  missing_bus_working_number_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-missing_bus_working_number_queue"
      VisibilityTimeout: 90

  missing_stops_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-missing_stops_queue"
      VisibilityTimeout: 90

  stops_not_found_in_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-stops_not_found_in_queue"
      VisibilityTimeout: 90

  same_stop_found_multiple_times_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-same_stop_found_multiple_times_queue"
      VisibilityTimeout: 90

  incorrect_licence_number_queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-incorrect_licence_number_queue"
      VisibilityTimeout: 90

  TemplateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-template-function-${Environment}"
      CodeUri: src/template
      Handler: app.lambda_handler
      Runtime: python3.11
      Timeout: 60
      Layers: !If
        - IsLocal
        - !Ref "AWS::NoValue"
        - !Ref BoilerPlate
      VpcConfig:
        SubnetIds: !If
          - IsLocal
          - !Ref "AWS::NoValue"
          - - !Ref PrivateSubnets
        SecurityGroupIds: !If
          - IsLocal
          - !Ref "AWS::NoValue"
          - - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}"
      Policies:
        - SQSPollerPolicy:
            QueueName: !GetAtt TemplateQueue.QueueName
        - !If
          - IsLocal
          - !Ref "AWS::NoValue"
          - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/secrets-manager-policy-arn}}"
      Events:
        SQSTemplateTriggerEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TemplateQueue.Arn
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 100
      Environment:
        Variables:
          POSTGRES_DB: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}"
          POSTGRES_HOST: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}"
          POSTGRES_PASSWORD_ARN: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}"
          POSTGRES_PORT: !If
            - IsLocal
            - 3128
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}"
          POSTGRES_USER: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}"

  GenerateCSVQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${Environment}-generate-csv"
      VisibilityTimeout: 90

  MonitorPipelineScheduled:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "rate(15 minutes)"
      State: ENABLED
      Targets:
        - Arn: !GetAtt MonitorPipeline.Arn
          Id: "MonitorPipelineTarget"
      Description: "Schedule to update the status of dqs tasks"

  MonitorPipeline:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Repository}-montior-pipeline-${Environment}"
      CodeUri: src/monitor
      Handler: app.lambda_handler
      Runtime: python3.11
      Timeout: 120
      Layers: !If
        - IsLocal
        - !Ref "AWS::NoValue"
        - !Ref BoilerPlate
      VpcConfig:
        SubnetIds: !If
          - IsLocal
          - !Ref "AWS::NoValue"
          - - !Ref PrivateSubnets
        SecurityGroupIds: !If
          - IsLocal
          - !Ref "AWS::NoValue"
          - - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/celeryworker-sg-id}}"
      Policies:
        - !If
          - IsLocal
          - !Ref "AWS::NoValue"
          - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/secrets-manager-policy-arn}}"
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: "rate(15 minutes)"
      Environment:
        Variables:
          POSTGRES_DB: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-name}}"
          POSTGRES_HOST: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/rds-host}}"
          POSTGRES_PASSWORD_ARN: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-password-arn}}"
          POSTGRES_PORT: !If
            - IsLocal
            - 3128
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/rds-db-port}}"
          POSTGRES_USER: !If
            - IsLocal
            - postgres
            - !Sub "{{resolve:ssm:/bodds/${ParamEnvironment}/pg-rw-user}}"
          TIMEOUT_HOURS: 12
          ENV: !Ref Environment

Outputs:
  Env:
    Description: "Environment"
    Value: !Ref Environment
