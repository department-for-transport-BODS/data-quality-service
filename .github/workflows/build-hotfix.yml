name: Build Hotfix
run-name: Build Hotfix from ${{ github.ref_name }}

on:
  workflow_dispatch:
  push:
    branches:
    - 'main'
    paths-ignore:
    - 'VERSION' # Prevent retrigger from hotfix VERSION update

concurrency:
  group: ${{ github.workflow }}-hotfix
  cancel-in-progress: false

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  RC_DST: ${{ vars.DEPLOYMENT_ARTEFACTS_S3_BUCKET }}
  BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN: ${{ vars.BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN }}
  PROD_ASSUME_ROLE_ARN: ${{ vars.PROD_ASSUME_ROLE_ARN }}

jobs:
  validation:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.validate.outputs.VERSION }}

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Configure AWS credentials against the BODS Shared-Services Account
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN }}
          role-session-name: ${{ vars.PROJECT_NAME }}-hotfix-build-validation
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Assume a role into the BODS-PROD account
      - name: Configure AWS Credentials in bodds-prod
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.PROD_ASSUME_ROLE_ARN }}
          role-session-name: ${{ vars.PROJECT_NAME }}-hotfix-build-validation
          role-duration-seconds: 3600
          role-skip-session-tagging: true
          role-chaining: true

      - name: Validate Job Parameters
        id: validate
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ `echo "$COMMIT_MSG" | grep -Ei "merge.*hotfix"` ]]; then
            base_version=$(yq -e '.version' VERSION)
            branch_name=$(echo "$COMMIT_MSG" | sed -nE 's/^Merge pull request #[0-9]+ from ([^/]+\/)?([^ ]+)/\2/p' | sed 's/\//-/g')
            hotfix_version="${base_version}_${branch_name}"

            echo "[INFO] Hotfix version: $hotfix_version"

            rc_path="$RC_DST/dqs/releases/$hotfix_version"
            if [[ $(aws s3 ls "s3://$rc_path/" | head -n 1) ]]; then
              echo "[INFO] Release candidate version [${hotfix_version}] already exists. Exiting"
              exit 1
            fi

            echo "VERSION=$hotfix_version" >> "$GITHUB_OUTPUT"
          else
            echo "[INFO] Not a hotfix merge. Skipping build."
            exit 1
          fi


  build:
    runs-on: ubuntu-latest
    needs: validation

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Setup SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      # Configure AWS credentials against the BODS Shared-Services Account
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.BODS_DEFAULT_GITHUB_ACTIONS_ASSUME_ROLE_ARN }}
          role-session-name: ${{ vars.PROJECT_NAME }}-app-build
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      # Assume a role into the BODS-PROD account
      - name: Configure AWS Credentials in bodds-prod
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.PROD_ASSUME_ROLE_ARN }}
          role-session-name: ${{ vars.PROJECT_NAME }}-app-build
          role-duration-seconds: 3600
          role-skip-session-tagging: true
          role-chaining: true

      - name: Package and Push Code
        env: 
          VERSION: ${{ needs.validation.outputs.VERSION }}
        run: |
          rc_path="dqs/releases/$VERSION"

          sam build && \
            sam package \
              --s3-bucket $RC_DST \
              --s3-prefix $rc_path \
              --output-template-file packaged.yaml

          aws s3 cp packaged.yaml s3://$RC_DST/$rc_path/
          aws s3 cp samconfig.yaml s3://$RC_DST/$rc_path/

          echo "[INFO] Application hotfix with version [${VERSION}] successfully build and uploaded to deployment artefacts storage"

  commit-version-and-tag:
    if: ${{ always() && !cancelled() && !contains(needs.*.result, 'failure') && contains(github.ref, 'main') }}
    runs-on: ubuntu-latest
    needs:
      - validation
      - build

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Commit and Push Changes
        env:
          VERSION: ${{ needs.validation.outputs.VERSION }}
        run: |
          echo "[INFO] Updating VERSION file and tagging commit as hotfix version [${VERSION}]"

          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git config --global url.https://${{ github.token }}@github.com/.insteadOf https://github.com/

          yq -e -i ".version = \"$VERSION\"" VERSION
          git add VERSION
          git commit -m "[AUTO] GitHub actions push for hotfix version $VERSION"
          git push origin HEAD:$GITHUB_REF_NAME

          git tag $VERSION
          git push --tags --force

  trigger-deploy-uat:
    if: ${{ always() && !cancelled() && !contains(needs.*.result, 'failure') && contains(github.ref, 'main') }}
    runs-on: ubuntu-latest
    needs: 
      - validation
      - build
      - commit-version-and-tag

    permissions:
      contents: write

    steps:
      - name: Trigger Remote for UAT
        uses: peter-evans/repository-dispatch@v3
        with:
          repository: ${{ github.repository }}
          event-type: automated-deploy-uat
          client-payload: '{ "environment": "uat", "release_version": "${{ needs.validation.outputs.VERSION }}" }'
